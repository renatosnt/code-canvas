{"ast":null,"code":"var _jsxFileName = \"/home/renato/Documents/code-canvas/src/Grid.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Node from \"./Node\";\nimport \"./Grid.css\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = () => {\n  _s();\n  const [gridSize, setGridSize] = React.useState([15, 25]);\n  const [start, setStart] = React.useState([5, 0]);\n  const [finish, setFinish] = React.useState([5, 25]);\n  const [isDrawing, setIsDrawing] = React.useState(false);\n  const [isMoving, setIsMoving] = React.useState(false);\n  const [movingNode, setMovingNode] = React.useState(null);\n  const [count, setCount] = React.useState(0);\n  const [grid, setGrid] = React.useState([]);\n  React.useEffect(() => {\n    const newGrid = gridConstructor();\n    setGrid(newGrid);\n  }, []);\n  function nodeConstructor(row, col) {\n    const node = {\n      row,\n      col,\n      isStart: row === start[0] && col === start[1],\n      isFinish: row === finish[0] && col === finish[1],\n      isWall: false\n    };\n    return node;\n  }\n  function gridConstructor() {\n    const initialGrid = [];\n    const sizeRows = gridSize[0];\n    const sizeCols = gridSize[1];\n    for (let i = 0; i <= sizeRows; i++) {\n      const row = [];\n      for (let j = 0; j <= sizeCols; j++) {\n        row.push(nodeConstructor(i, j));\n      }\n      initialGrid.push(row);\n    }\n    return initialGrid;\n  }\n  function startDrawing(event, row, col) {\n    event.preventDefault();\n    if (!grid[row][col].isStart && !grid[row][col].isFinish) {\n      setIsDrawing(true);\n    } else {\n      console.log(event.target.parentNode.parentNode);\n      if (grid[row][col].isStart) {\n        grid[row][col].isStart = false;\n        setMovingNode(\"start\");\n      } else {\n        grid[row][col].isFinish = false;\n        setMovingNode(\"finish\");\n      }\n      setIsMoving(true);\n    }\n  }\n  function finishDrawing(event, row, col) {\n    event.preventDefault();\n    if (isDrawing) {\n      setIsDrawing(false);\n    }\n    if (isMoving) {\n      const newGrid = grid.slice();\n      if (movingNode === \"start\") {\n        newGrid[row][col].isStart = true;\n      } else if (movingNode === \"finish\") {\n        newGrid[row][col].isFinish = true;\n      }\n      setGrid(newGrid);\n      setMovingNode(null);\n      setIsMoving(false);\n    }\n  }\n  function draw(_ref, row, col) {\n    let {\n      target\n    } = _ref;\n    if (isDrawing && !grid[row][col].isStart && !grid[row][col].isFinish) {\n      const newGrid = grid.slice();\n      newGrid[row][col].isWall = true;\n      setGrid(newGrid);\n    }\n  }\n  function clearGrid() {\n    const newGrid = grid.slice();\n    newGrid.map(row => row.map(node => {\n      node.isWall = false;\n    }));\n    setGrid(newGrid);\n  }\n\n  //\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      clearGrid: clearGrid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: isMoving ? \"grid grid-on-moving\" : \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map(node => /*#__PURE__*/_createElement(Node, {\n            ...node,\n            key: node.col,\n            onMouseDown: event => startDrawing(event, node.row, node.col),\n            onMouseUp: event => finishDrawing(event, node.row, node.col),\n            onMouseEnter: event => draw(event, node.row, node.col),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }\n          }))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Grid, \"o3wCClJScP5OOhEDv4LtFMW12jQ=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","Node","Menu","Grid","gridSize","setGridSize","useState","start","setStart","finish","setFinish","isDrawing","setIsDrawing","isMoving","setIsMoving","movingNode","setMovingNode","count","setCount","grid","setGrid","useEffect","newGrid","gridConstructor","nodeConstructor","row","col","node","isStart","isFinish","isWall","initialGrid","sizeRows","sizeCols","i","j","push","startDrawing","event","preventDefault","console","log","target","parentNode","finishDrawing","slice","draw","clearGrid","map"],"sources":["/home/renato/Documents/code-canvas/src/Grid.js"],"sourcesContent":["import React from \"react\";\nimport Node from \"./Node\";\nimport \"./Grid.css\";\nimport Menu from \"./Menu\";\n\nconst Grid = () => {\n  const [gridSize, setGridSize] = React.useState([15, 25]);\n  const [start, setStart] = React.useState([5, 0]);\n  const [finish, setFinish] = React.useState([5, 25]);\n  const [isDrawing, setIsDrawing] = React.useState(false);\n  const [isMoving, setIsMoving] = React.useState(false);\n  const [movingNode, setMovingNode] = React.useState(null);\n\n  const [count, setCount] = React.useState(0);\n  const [grid, setGrid] = React.useState([]);\n\n  React.useEffect(() => {\n    const newGrid = gridConstructor();\n    setGrid(newGrid);\n  }, []);\n\n  function nodeConstructor(row, col) {\n    const node = {\n      row,\n      col,\n      isStart: row === start[0] && col === start[1],\n      isFinish: row === finish[0] && col === finish[1],\n      isWall: false,\n    };\n    return node;\n  }\n\n  function gridConstructor() {\n    const initialGrid = [];\n    const sizeRows = gridSize[0];\n    const sizeCols = gridSize[1];\n\n    for (let i = 0; i <= sizeRows; i++) {\n      const row = [];\n      for (let j = 0; j <= sizeCols; j++) {\n        row.push(nodeConstructor(i, j));\n      }\n      initialGrid.push(row);\n    }\n    return initialGrid;\n  }\n\n  function startDrawing(event, row, col) {\n    event.preventDefault();\n    if (!grid[row][col].isStart && !grid[row][col].isFinish) {\n      setIsDrawing(true);\n    } else {\n      console.log(event.target.parentNode.parentNode);\n      if (grid[row][col].isStart) {\n        grid[row][col].isStart = false;\n        setMovingNode(\"start\");\n      } else {\n        grid[row][col].isFinish = false;\n        setMovingNode(\"finish\");\n      }\n      setIsMoving(true);\n    }\n  }\n\n  function finishDrawing(event, row, col) {\n    event.preventDefault();\n    if (isDrawing) {\n      setIsDrawing(false);\n    }\n    if (isMoving) {\n      const newGrid = grid.slice();\n      if (movingNode === \"start\") {\n        newGrid[row][col].isStart = true;\n      } else if (movingNode === \"finish\") {\n        newGrid[row][col].isFinish = true;\n      }\n      setGrid(newGrid);\n      setMovingNode(null);\n      setIsMoving(false);\n    }\n  }\n\n  function draw({ target }, row, col) {\n    if (isDrawing && !grid[row][col].isStart && !grid[row][col].isFinish) {\n      const newGrid = grid.slice();\n      newGrid[row][col].isWall = true;\n      setGrid(newGrid);\n    }\n  }\n\n  function clearGrid() {\n    const newGrid = grid.slice();\n\n    newGrid.map((row) =>\n      row.map((node) => {\n        node.isWall = false;\n      })\n    );\n    setGrid(newGrid);\n  }\n\n  //\n  return (\n    <>\n      <Menu clearGrid={clearGrid} />\n      <table className={isMoving ? \"grid grid-on-moving\" : \"grid\"}>\n        <tbody>\n          {grid.map((row, i) => (\n            <tr key={i}>\n              {row.map((node) => (\n                <Node\n                  {...node}\n                  key={node.col}\n                  onMouseDown={(event) =>\n                    startDrawing(event, node.row, node.col)\n                  }\n                  onMouseUp={(event) =>\n                    finishDrawing(event, node.row, node.col)\n                  }\n                  onMouseEnter={(event) => draw(event, node.row, node.col)}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default Grid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}