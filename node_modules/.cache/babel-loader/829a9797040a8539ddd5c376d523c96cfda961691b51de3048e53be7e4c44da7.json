{"ast":null,"code":"/**\n *\n * @param {matriz de objetos} grid\n * @param {objeto Node} start\n * @param {objeto Node} finish\n */\n\n// {\n//   row,\n//   col,\n//   isStart,\n//   isFinish,\n//   isWall,\n//   isVisited,\n//   onMouseDown,\n//   onMouseUp,\n//   onMouseEnter,\n// }\n\nexport function dfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n  const path = [];\n  function dfsAux(i, j) {\n    console.log(\"dfsAux\", i, j);\n    if (i >= numRows || j >= numCols || i < 0 || j < 0 || grid[i][j].isVisited) {\n      return;\n    }\n    console.log(\"dfsAux\", i, j);\n    path.push([i, j]);\n    grid[i][j].isVisited = true;\n    console.log(\"visitando\", [i, j]);\n    if (!grid[i][j].isFinish) {\n      dfsAux(i, j + 1);\n      dfsAux(i + 1, j);\n      dfsAux(i - 1, j);\n      dfsAux(i, j - 1);\n    }\n    return true;\n  }\n  console.log(\"inicio\", start.row, start.col);\n  dfsAux(start.row, start.col);\n  return path;\n  // def dfs(i, j):\n  //     if i >= len(grid) or j >= len(grid[0]) or i < 0 or j < 0 or \\\n  //      grid[i][j] == \"0\" or (i, j) in visited:\n  //         return\n  //     visited.add((i, j))\n  //     dfs(i, j + 1)\n  //     dfs(i + 1, j)\n  //     dfs(i - 1, j)\n  //     dfs(i, j - 1)\n}","map":{"version":3,"names":["dfs","grid","start","finish","numRows","numCols","length","path","dfsAux","i","j","console","log","isVisited","push","isFinish","row","col"],"sources":["/home/renato/Documents/code-canvas/src/algorithms/dfs.js"],"sourcesContent":["/**\n *\n * @param {matriz de objetos} grid\n * @param {objeto Node} start\n * @param {objeto Node} finish\n */\n\n// {\n//   row,\n//   col,\n//   isStart,\n//   isFinish,\n//   isWall,\n//   isVisited,\n//   onMouseDown,\n//   onMouseUp,\n//   onMouseEnter,\n// }\n\nexport function dfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n  const path = [];\n\n  function dfsAux(i, j) {\n    console.log(\"dfsAux\", i, j);\n    if (\n      i >= numRows ||\n      j >= numCols ||\n      i < 0 ||\n      j < 0 ||\n      grid[i][j].isVisited\n    ) {\n      return;\n    }\n    console.log(\"dfsAux\", i, j);\n\n    path.push([i, j]);\n    grid[i][j].isVisited = true;\n    console.log(\"visitando\", [i, j]);\n    if (!grid[i][j].isFinish) {\n      dfsAux(i, j + 1);\n      dfsAux(i + 1, j);\n      dfsAux(i - 1, j);\n      dfsAux(i, j - 1);\n    }\n    return true;\n  }\n  console.log(\"inicio\", start.row, start.col);\n  dfsAux(start.row, start.col);\n  return path;\n  // def dfs(i, j):\n  //     if i >= len(grid) or j >= len(grid[0]) or i < 0 or j < 0 or \\\n  //      grid[i][j] == \"0\" or (i, j) in visited:\n  //         return\n  //     visited.add((i, j))\n  //     dfs(i, j + 1)\n  //     dfs(i + 1, j)\n  //     dfs(i - 1, j)\n  //     dfs(i, j - 1)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACvC,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAG,CAACJ,IAAI,CAACK,MAAM,EAAEL,IAAI,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC;EACxD,MAAMC,IAAI,GAAG,EAAE;EAEf,SAASC,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,CAAC,EAAEC,CAAC,CAAC;IAC3B,IACED,CAAC,IAAIL,OAAO,IACZM,CAAC,IAAIL,OAAO,IACZI,CAAC,GAAG,CAAC,IACLC,CAAC,GAAG,CAAC,IACLT,IAAI,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,SAAS,EACpB;MACA;IACF;IACAF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,CAAC,EAAEC,CAAC,CAAC;IAE3BH,IAAI,CAACO,IAAI,CAAC,CAACL,CAAC,EAAEC,CAAC,CAAC,CAAC;IACjBT,IAAI,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,SAAS,GAAG,IAAI;IAC3BF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,CAACH,CAAC,EAAEC,CAAC,CAAC,CAAC;IAChC,IAAI,CAACT,IAAI,CAACQ,CAAC,CAAC,CAACC,CAAC,CAAC,CAACK,QAAQ,EAAE;MACxBP,MAAM,CAACC,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;MAChBF,MAAM,CAACC,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC;MAChBF,MAAM,CAACC,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC;MAChBF,MAAM,CAACC,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC;IAClB;IACA,OAAO,IAAI;EACb;EACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEV,KAAK,CAACc,GAAG,EAAEd,KAAK,CAACe,GAAG,CAAC;EAC3CT,MAAM,CAACN,KAAK,CAACc,GAAG,EAAEd,KAAK,CAACe,GAAG,CAAC;EAC5B,OAAOV,IAAI;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}