{"ast":null,"code":"export function dfs(grid,start,finish){var _ref=[grid.length,grid[0].length],numRows=_ref[0],numCols=_ref[1];var stack=[];var path=[];stack.push(start);console.log(\"Tipo\");console.log(typeof grid);while(stack.length){var curr=stack.pop();var _ref2=[curr.row,curr.col],i=_ref2[0],j=_ref2[1];if(curr===finish){path.push(finish);return path;}if(!curr.isVisited&&!curr.isWall){curr.isVisited=true;path.push(curr);console.log(i,j);// para todos adjacentes ao curr, não visitados, adicione-os a stack\n// baixo\nif(i+1<numRows&&!grid[i+1][j].isVisited&&!grid[i+1][j].isWall){grid[i+1][j].previous=curr;stack.push(grid[i+1][j]);}// esquerda\nif(j-1>=0&&!grid[i][j-1].isVisited&&!grid[i][j-1].isWall){grid[i][j-1].previous=curr;stack.push(grid[i][j-1]);}// cima\nif(i-1>=0&&!grid[i-1][j].isVisited&&!grid[i-1][j].isWall){grid[i-1][j].previous=curr;stack.push(grid[i-1][j]);}// direita\nif(j+1<numCols&&!grid[i][j+1].isVisited&&!grid[i][j+1].isWall){grid[i][j+1].previous=curr;stack.push(grid[i][j+1]);}}}return[];}","map":{"version":3,"names":["dfs","grid","start","finish","length","numRows","numCols","stack","path","push","console","log","curr","pop","row","col","i","j","isVisited","isWall","previous"],"sources":["/home/renato/Documents/code-canvas/src/algorithms/dfs.js"],"sourcesContent":["export function dfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n  const stack = [];\n  const path = [];\n\n  stack.push(start);\n  console.log(\"Tipo\");\n  console.log(typeof grid);\n  while (stack.length) {\n    const curr = stack.pop();\n    const [i, j] = [curr.row, curr.col];\n\n    if (curr === finish) {\n      path.push(finish);\n      return path;\n    }\n\n    if (!curr.isVisited && !curr.isWall) {\n      curr.isVisited = true;\n      path.push(curr);\n      console.log(i, j);\n      // para todos adjacentes ao curr, não visitados, adicione-os a stack\n\n      // baixo\n      if (\n        i + 1 < numRows &&\n        !grid[i + 1][j].isVisited &&\n        !grid[i + 1][j].isWall\n      ) {\n        grid[i + 1][j].previous = curr;\n        stack.push(grid[i + 1][j]);\n      }\n\n      // esquerda\n      if (j - 1 >= 0 && !grid[i][j - 1].isVisited && !grid[i][j - 1].isWall) {\n        grid[i][j - 1].previous = curr;\n        stack.push(grid[i][j - 1]);\n      }\n      // cima\n      if (i - 1 >= 0 && !grid[i - 1][j].isVisited && !grid[i - 1][j].isWall) {\n        grid[i - 1][j].previous = curr;\n        stack.push(grid[i - 1][j]);\n      }\n\n      // direita\n      if (\n        j + 1 < numCols &&\n        !grid[i][j + 1].isVisited &&\n        !grid[i][j + 1].isWall\n      ) {\n        grid[i][j + 1].previous = curr;\n        stack.push(grid[i][j + 1]);\n      }\n    }\n  }\n\n  return [];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}