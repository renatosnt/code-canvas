{"ast":null,"code":"export function bfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n  const totalPath = [];\n  const queue = [];\n  queue.push(start);\n  while (queue.length) {\n    const curr = queue.shift();\n    if (curr === finish) return totalPath;\n    if (curr.isWall || curr.isVisited) continue;\n    curr.isVisited = true;\n    totalPath.push(curr);\n    const [i, j] = [curr.row, curr.col];\n    // para todos adjacentes ao curr, não visitados, adicione-os a stack\n\n    // baixo\n    if (i + 1 < numRows && !grid[i + 1][j].isVisited && !grid[i + 1][j].isWall) {\n      grid[i + 1][j].previous = curr;\n      queue.push(grid[i + 1][j]);\n    }\n\n    // esquerda\n    if (j - 1 >= 0 && !grid[i][j - 1].isVisited && !grid[i][j - 1].isWall) {\n      grid[i][j - 1].previous = curr;\n      queue.push(grid[i][j - 1]);\n    }\n    // cima\n    if (i - 1 >= 0 && !grid[i - 1][j].isVisited && !grid[i - 1][j].isWall) {\n      grid[i - 1][j].previous = curr;\n      queue.push(grid[i - 1][j]);\n    }\n\n    // direita\n    if (j + 1 < numCols && !grid[i][j + 1].isVisited && !grid[i][j + 1].isWall) {\n      grid[i][j + 1].previous = curr;\n      queue.push(grid[i][j + 1]);\n    }\n  }\n  console.log(\"visitados:\");\n  console.log(totalPath);\n  return totalPath;\n}","map":{"version":3,"names":["bfs","grid","start","finish","numRows","numCols","length","totalPath","queue","push","curr","shift","isWall","isVisited","i","j","row","col","previous","console","log"],"sources":["/home/renato/Documents/code-canvas/src/algorithms/bfs.js"],"sourcesContent":["export function bfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n\n  const totalPath = [];\n  const queue = [];\n  queue.push(start);\n  while (queue.length) {\n    const curr = queue.shift();\n    if (curr === finish) return totalPath;\n\n    if (curr.isWall || curr.isVisited) continue;\n\n    curr.isVisited = true;\n    totalPath.push(curr);\n    const [i, j] = [curr.row, curr.col];\n    // para todos adjacentes ao curr, não visitados, adicione-os a stack\n\n    // baixo\n    if (\n      i + 1 < numRows &&\n      !grid[i + 1][j].isVisited &&\n      !grid[i + 1][j].isWall\n    ) {\n      grid[i + 1][j].previous = curr;\n      queue.push(grid[i + 1][j]);\n    }\n\n    // esquerda\n    if (j - 1 >= 0 && !grid[i][j - 1].isVisited && !grid[i][j - 1].isWall) {\n      grid[i][j - 1].previous = curr;\n      queue.push(grid[i][j - 1]);\n    }\n    // cima\n    if (i - 1 >= 0 && !grid[i - 1][j].isVisited && !grid[i - 1][j].isWall) {\n      grid[i - 1][j].previous = curr;\n      queue.push(grid[i - 1][j]);\n    }\n\n    // direita\n    if (\n      j + 1 < numCols &&\n      !grid[i][j + 1].isVisited &&\n      !grid[i][j + 1].isWall\n    ) {\n      grid[i][j + 1].previous = curr;\n      queue.push(grid[i][j + 1]);\n    }\n  }\n\n  console.log(\"visitados:\");\n  console.log(totalPath);\n  return totalPath;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}