{"ast":null,"code":"export function dfs(grid, start, finish) {\n  const stack = [];\n  const path = [];\n  stack.push(start);\n  while (stack.length) {\n    const curr = stack.pop();\n    const [i, j] = [curr.row, curr.col];\n    if (curr === finish) {\n      return path;\n    }\n    if (!curr.isVisited && !curr.isWall) {\n      grid[i][j].isVisited = true;\n      path.push([i, j]);\n      console.log(i, j);\n    }\n\n    // para todos adjacentes ao curr, adicione-os a stack\n  }\n}","map":{"version":3,"names":["dfs","grid","start","finish","stack","path","push","length","curr","pop","i","j","row","col","isVisited","isWall","console","log"],"sources":["/home/renato/Documents/code-canvas/src/algorithms/dfs.js"],"sourcesContent":["export function dfs(grid, start, finish) {\n  const stack = [];\n  const path = [];\n\n  stack.push(start);\n\n  while (stack.length) {\n    const curr = stack.pop();\n    const [i, j] = [curr.row, curr.col];\n\n    if (curr === finish) {\n      return path;\n    }\n\n    if (!curr.isVisited && !curr.isWall) {\n      grid[i][j].isVisited = true;\n      path.push([i, j]);\n      console.log(i, j);\n    }\n\n    // para todos adjacentes ao curr, adicione-os a stack\n  }\n}\n"],"mappings":"AAAA,OAAO,SAASA,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACvC,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,IAAI,GAAG,EAAE;EAEfD,KAAK,CAACE,IAAI,CAACJ,KAAK,CAAC;EAEjB,OAAOE,KAAK,CAACG,MAAM,EAAE;IACnB,MAAMC,IAAI,GAAGJ,KAAK,CAACK,GAAG,EAAE;IACxB,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACH,IAAI,CAACI,GAAG,EAAEJ,IAAI,CAACK,GAAG,CAAC;IAEnC,IAAIL,IAAI,KAAKL,MAAM,EAAE;MACnB,OAAOE,IAAI;IACb;IAEA,IAAI,CAACG,IAAI,CAACM,SAAS,IAAI,CAACN,IAAI,CAACO,MAAM,EAAE;MACnCd,IAAI,CAACS,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,SAAS,GAAG,IAAI;MAC3BT,IAAI,CAACC,IAAI,CAAC,CAACI,CAAC,EAAEC,CAAC,CAAC,CAAC;MACjBK,OAAO,CAACC,GAAG,CAACP,CAAC,EAAEC,CAAC,CAAC;IACnB;;IAEA;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}