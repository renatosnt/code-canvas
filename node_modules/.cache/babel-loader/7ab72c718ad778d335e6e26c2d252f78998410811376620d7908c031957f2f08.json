{"ast":null,"code":"export function bfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n  const queue = [];\n  const path = [];\n  queue.push(start);\n  while (queue.length) {\n    const curr = queue.shift();\n    console.log(curr);\n    const [i, j] = [curr.row, curr.col];\n    if (curr === finish) {\n      path.push(finish);\n      return path;\n    }\n    if (!curr.isVisited && !curr.isWall) {\n      grid[i][j].isVisited = true;\n      path.push(grid[i][j]);\n      console.log(i, j);\n    }\n    // para todos adjacentes ao curr, não visitados, adicione-os a queue\n\n    // baixo\n    if (i + 1 < numRows && !grid[i + 1][j].isVisited && !grid[i + 1][j].isWall) {\n      queue.push(grid[i + 1][j]);\n    }\n\n    // esquerda\n    if (j - 1 >= 0 && !grid[i][j - 1].isVisited && !grid[i][j - 1].isWall) {\n      queue.push(grid[i][j - 1]);\n    }\n    // cima\n    if (i - 1 >= 0 && !grid[i - 1][j].isVisited && !grid[i - 1][j].isWall) {\n      queue.push(grid[i - 1][j]);\n    }\n\n    // direita\n    if (j + 1 < numCols && !grid[i][j + 1].isVisited && !grid[i][j + 1].isWall) {\n      queue.push(grid[i][j + 1]);\n    }\n  }\n  return [];\n}","map":{"version":3,"names":["bfs","grid","start","finish","numRows","numCols","length","queue","path","push","curr","shift","console","log","i","j","row","col","isVisited","isWall"],"sources":["/home/renato/Documents/code-canvas/src/algorithms/bfs.js"],"sourcesContent":["export function bfs(grid, start, finish) {\n  const [numRows, numCols] = [grid.length, grid[0].length];\n  const queue = [];\n  const path = [];\n\n  queue.push(start);\n\n  while (queue.length) {\n    const curr = queue.shift();\n    console.log(curr);\n    const [i, j] = [curr.row, curr.col];\n\n    if (curr === finish) {\n      path.push(finish);\n      return path;\n    }\n\n    if (!curr.isVisited && !curr.isWall) {\n      grid[i][j].isVisited = true;\n      path.push(grid[i][j]);\n      console.log(i, j);\n    }\n    // para todos adjacentes ao curr, não visitados, adicione-os a queue\n\n    // baixo\n    if (\n      i + 1 < numRows &&\n      !grid[i + 1][j].isVisited &&\n      !grid[i + 1][j].isWall\n    ) {\n      queue.push(grid[i + 1][j]);\n    }\n\n    // esquerda\n    if (j - 1 >= 0 && !grid[i][j - 1].isVisited && !grid[i][j - 1].isWall) {\n      queue.push(grid[i][j - 1]);\n    }\n    // cima\n    if (i - 1 >= 0 && !grid[i - 1][j].isVisited && !grid[i - 1][j].isWall) {\n      queue.push(grid[i - 1][j]);\n    }\n\n    // direita\n    if (\n      j + 1 < numCols &&\n      !grid[i][j + 1].isVisited &&\n      !grid[i][j + 1].isWall\n    ) {\n      queue.push(grid[i][j + 1]);\n    }\n  }\n  return [];\n}\n"],"mappings":"AAAA,OAAO,SAASA,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACvC,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAG,CAACJ,IAAI,CAACK,MAAM,EAAEL,IAAI,CAAC,CAAC,CAAC,CAACK,MAAM,CAAC;EACxD,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,IAAI,GAAG,EAAE;EAEfD,KAAK,CAACE,IAAI,CAACP,KAAK,CAAC;EAEjB,OAAOK,KAAK,CAACD,MAAM,EAAE;IACnB,MAAMI,IAAI,GAAGH,KAAK,CAACI,KAAK,EAAE;IAC1BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,MAAM,CAACI,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACL,IAAI,CAACM,GAAG,EAAEN,IAAI,CAACO,GAAG,CAAC;IAEnC,IAAIP,IAAI,KAAKP,MAAM,EAAE;MACnBK,IAAI,CAACC,IAAI,CAACN,MAAM,CAAC;MACjB,OAAOK,IAAI;IACb;IAEA,IAAI,CAACE,IAAI,CAACQ,SAAS,IAAI,CAACR,IAAI,CAACS,MAAM,EAAE;MACnClB,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,SAAS,GAAG,IAAI;MAC3BV,IAAI,CAACC,IAAI,CAACR,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;MACrBH,OAAO,CAACC,GAAG,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB;IACA;;IAEA;IACA,IACED,CAAC,GAAG,CAAC,GAAGV,OAAO,IACf,CAACH,IAAI,CAACa,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,SAAS,IACzB,CAACjB,IAAI,CAACa,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACI,MAAM,EACtB;MACAZ,KAAK,CAACE,IAAI,CAACR,IAAI,CAACa,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;IAC5B;;IAEA;IACA,IAAIA,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACd,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAACG,SAAS,IAAI,CAACjB,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAACI,MAAM,EAAE;MACrEZ,KAAK,CAACE,IAAI,CAACR,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B;IACA;IACA,IAAID,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAACb,IAAI,CAACa,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,SAAS,IAAI,CAACjB,IAAI,CAACa,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACI,MAAM,EAAE;MACrEZ,KAAK,CAACE,IAAI,CAACR,IAAI,CAACa,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC;IAC5B;;IAEA;IACA,IACEA,CAAC,GAAG,CAAC,GAAGV,OAAO,IACf,CAACJ,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAACG,SAAS,IACzB,CAACjB,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAACI,MAAM,EACtB;MACAZ,KAAK,CAACE,IAAI,CAACR,IAAI,CAACa,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B;EACF;EACA,OAAO,EAAE;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}